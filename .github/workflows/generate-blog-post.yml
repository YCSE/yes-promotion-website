name: Generate Blog Post

on:
  schedule:
    # Run every 2 days at 9:00 AM KST (00:00 UTC)
    - cron: '0 0 */2 * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate blog content
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          node scripts/generate-content.js
          
      - name: Commit and push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add all changes BEFORE pulling to avoid unstaged changes error
          git add content/posts/*.md || true
          git add content/blog/*.md || true
          git add public/images/blog/*.jpg || true
          git add public/images/blog/*.jpeg || true
          
          # Pull latest changes to avoid conflicts
          git fetch origin main
          git pull origin main --rebase --strategy-option=theirs || true
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Create commit message with current date
            COMMIT_MSG="ü§ñ Auto-generated blog post - $(date +'%Y-%m-%d')"
            git commit -m "$COMMIT_MSG"
            
            # Push changes with retry logic
            for i in 1 2 3; do
              if git push origin main; then
                echo "‚úÖ Blog post committed and pushed successfully"
                break
              else
                echo "Push failed, retrying in 5 seconds..."
                sleep 5
                git pull origin main --rebase --strategy-option=theirs
              fi
            done
          fi
          
      # Build the Next.js site with new content
      - name: Build with Next.js
        run: npm run build
        
      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      # Create .nojekyll file
      - name: Create .nojekyll file
        run: touch ./out/.nojekyll
        
      # Upload artifact for GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
          
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Summary
        run: |
          echo "‚ú® Blog post generation and deployment completed!"
          echo "üåê Site URL: ${{ steps.deployment.outputs.page_url }}"
            
  # Optional: Send notification on failure
  notify-failure:
    runs-on: ubuntu-latest
    needs: generate-and-deploy
    if: failure()
    steps:
      - name: Notify failure
        run: |
          echo "‚ùå Blog post generation failed!"
          echo "Please check the workflow logs for details."